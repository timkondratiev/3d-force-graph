{"bomFormat":"CycloneDX","specVersion":"1.4","serialNumber":"urn:uuid:7cc64e72-abd3-4ff8-9da9-7f4981e86624","version":1,"metadata":{"timestamp":"2022-07-25T11:24:29.195597+00:00","tools":[{"vendor":"Profiscope","name":"Codescoring (https://codescoring.com)"}]},"components":[{"bom-ref":"pkg:maven/aopalliance/aopalliance@1.0","type":"library","group":"aopalliance","name":"aopalliance","version":"1.0","scope":"required","purl":"pkg:maven/aopalliance/aopalliance@1.0","externalReferences":[{"url":"http://aopalliance.sourceforge.net","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/aopalliance/aopalliance/1.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2005-08-01T09:23:54+00:00"}]},{"bom-ref":"pkg:maven/auto-value-annotations/com.google.auto.value@1.7.4","type":"library","author":"Google LLC","group":"auto-value-annotations","name":"com.google.auto.value","version":"1.7.4","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/auto-value-annotations/com.google.auto.value@1.7.4","externalReferences":[{"url":"https://github.com/google/auto/tree/master/value","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.auto.value/auto-value-annotations/1.7.4","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2020-07-08T23:32:46+00:00"}]},{"bom-ref":"pkg:maven/caliper/com.google.caliper@1.0-beta-2","type":"library","author":"Google Inc., Gregory Kick, Jesse Wilson","group":"caliper","name":"com.google.caliper","version":"1.0-beta-2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/caliper/com.google.caliper@1.0-beta-2","externalReferences":[{"url":"http://code.google.com/p/caliper/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.caliper/caliper/1.0-beta-2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2015-03-06T16:23:49+00:00"}]},{"bom-ref":"pkg:maven/jsr305/com.google.code.findbugs@3.0.2","type":"library","group":"jsr305","name":"com.google.code.findbugs","version":"3.0.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/jsr305/com.google.code.findbugs@3.0.2","externalReferences":[{"url":"http://findbugs.sourceforge.net/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305/3.0.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-testlib/pom.xml"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/guava/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"guava/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2017-03-31T04:55:47+00:00"}]},{"bom-ref":"pkg:maven/gson/com.google.code.gson@2.2.2","type":"library","author":"Google, Inc., Inderjeet Singh, Joel Leitch, Jesse Wilson","group":"gson","name":"com.google.code.gson","version":"2.2.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"QXBhY2hlIExpY2Vuc2UKVmVyc2lvbiAyLjAsIEphbnVhcnkgMjAwNApodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvCgpURVJNUyBBTkQgQ09ORElUSU9OUyBGT1IgVVNFLCBSRVBST0RVQ1RJT04sIEFORCBESVNUUklCVVRJT04KCjEuIERlZmluaXRpb25zLgoKIkxpY2Vuc2UiIHNoYWxsIG1lYW4gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGZvciB1c2UsIHJlcHJvZHVjdGlvbiwgYW5kIGRpc3RyaWJ1dGlvbiBhcyBkZWZpbmVkIGJ5IFNlY3Rpb25zIDEgdGhyb3VnaCA5IG9mIHRoaXMgZG9jdW1lbnQuCgoiTGljZW5zb3IiIHNoYWxsIG1lYW4gdGhlIGNvcHlyaWdodCBvd25lciBvciBlbnRpdHkgYXV0aG9yaXplZCBieSB0aGUgY29weXJpZ2h0IG93bmVyIHRoYXQgaXMgZ3JhbnRpbmcgdGhlIExpY2Vuc2UuCgoiTGVnYWwgRW50aXR5IiBzaGFsbCBtZWFuIHRoZSB1bmlvbiBvZiB0aGUgYWN0aW5nIGVudGl0eSBhbmQgYWxsIG90aGVyIGVudGl0aWVzIHRoYXQgY29udHJvbCwgYXJlIGNvbnRyb2xsZWQgYnksIG9yIGFyZSB1bmRlciBjb21tb24gY29udHJvbCB3aXRoIHRoYXQgZW50aXR5LiBGb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgZGVmaW5pdGlvbiwgImNvbnRyb2wiIG1lYW5zIChpKSB0aGUgcG93ZXIsIGRpcmVjdCBvciBpbmRpcmVjdCwgdG8gY2F1c2UgdGhlIGRpcmVjdGlvbiBvciBtYW5hZ2VtZW50IG9mIHN1Y2ggZW50aXR5LCB3aGV0aGVyIGJ5IGNvbnRyYWN0IG9yIG90aGVyd2lzZSwgb3IgKGlpKSBvd25lcnNoaXAgb2YgZmlmdHkgcGVyY2VudCAoNTAlKSBvciBtb3JlIG9mIHRoZSBvdXRzdGFuZGluZyBzaGFyZXMsIG9yIChpaWkpIGJlbmVmaWNpYWwgb3duZXJzaGlwIG9mIHN1Y2ggZW50aXR5LgoKIllvdSIgKG9yICJZb3VyIikgc2hhbGwgbWVhbiBhbiBpbmRpdmlkdWFsIG9yIExlZ2FsIEVudGl0eSBleGVyY2lzaW5nIHBlcm1pc3Npb25zIGdyYW50ZWQgYnkgdGhpcyBMaWNlbnNlLgoKIlNvdXJjZSIgZm9ybSBzaGFsbCBtZWFuIHRoZSBwcmVmZXJyZWQgZm9ybSBmb3IgbWFraW5nIG1vZGlmaWNhdGlvbnMsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gc29mdHdhcmUgc291cmNlIGNvZGUsIGRvY3VtZW50YXRpb24gc291cmNlLCBhbmQgY29uZmlndXJhdGlvbiBmaWxlcy4KCiJPYmplY3QiIGZvcm0gc2hhbGwgbWVhbiBhbnkgZm9ybSByZXN1bHRpbmcgZnJvbSBtZWNoYW5pY2FsIHRyYW5zZm9ybWF0aW9uIG9yIHRyYW5zbGF0aW9uIG9mIGEgU291cmNlIGZvcm0sIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gY29tcGlsZWQgb2JqZWN0IGNvZGUsIGdlbmVyYXRlZCBkb2N1bWVudGF0aW9uLCBhbmQgY29udmVyc2lvbnMgdG8gb3RoZXIgbWVkaWEgdHlwZXMuCgoiV29yayIgc2hhbGwgbWVhbiB0aGUgd29yayBvZiBhdXRob3JzaGlwLCB3aGV0aGVyIGluIFNvdXJjZSBvciBPYmplY3QgZm9ybSwgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIExpY2Vuc2UsIGFzIGluZGljYXRlZCBieSBhIGNvcHlyaWdodCBub3RpY2UgdGhhdCBpcyBpbmNsdWRlZCBpbiBvciBhdHRhY2hlZCB0byB0aGUgd29yayAoYW4gZXhhbXBsZSBpcyBwcm92aWRlZCBpbiB0aGUgQXBwZW5kaXggYmVsb3cpLgoKIkRlcml2YXRpdmUgV29ya3MiIHNoYWxsIG1lYW4gYW55IHdvcmssIHdoZXRoZXIgaW4gU291cmNlIG9yIE9iamVjdCBmb3JtLCB0aGF0IGlzIGJhc2VkIG9uIChvciBkZXJpdmVkIGZyb20pIHRoZSBXb3JrIGFuZCBmb3Igd2hpY2ggdGhlIGVkaXRvcmlhbCByZXZpc2lvbnMsIGFubm90YXRpb25zLCBlbGFib3JhdGlvbnMsIG9yIG90aGVyIG1vZGlmaWNhdGlvbnMgcmVwcmVzZW50LCBhcyBhIHdob2xlLCBhbiBvcmlnaW5hbCB3b3JrIG9mIGF1dGhvcnNoaXAuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBMaWNlbnNlLCBEZXJpdmF0aXZlIFdvcmtzIHNoYWxsIG5vdCBpbmNsdWRlIHdvcmtzIHRoYXQgcmVtYWluIHNlcGFyYWJsZSBmcm9tLCBvciBtZXJlbHkgbGluayAob3IgYmluZCBieSBuYW1lKSB0byB0aGUgaW50ZXJmYWNlcyBvZiwgdGhlIFdvcmsgYW5kIERlcml2YXRpdmUgV29ya3MgdGhlcmVvZi4KCiJDb250cmlidXRpb24iIHNoYWxsIG1lYW4gYW55IHdvcmsgb2YgYXV0aG9yc2hpcCwgaW5jbHVkaW5nIHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mIHRoZSBXb3JrIGFuZCBhbnkgbW9kaWZpY2F0aW9ucyBvciBhZGRpdGlvbnMgdG8gdGhhdCBXb3JrIG9yIERlcml2YXRpdmUgV29ya3MgdGhlcmVvZiwgdGhhdCBpcyBpbnRlbnRpb25hbGx5IHN1Ym1pdHRlZCB0byBMaWNlbnNvciBmb3IgaW5jbHVzaW9uIGluIHRoZSBXb3JrIGJ5IHRoZSBjb3B5cmlnaHQgb3duZXIgb3IgYnkgYW4gaW5kaXZpZHVhbCBvciBMZWdhbCBFbnRpdHkgYXV0aG9yaXplZCB0byBzdWJtaXQgb24gYmVoYWxmIG9mIHRoZSBjb3B5cmlnaHQgb3duZXIuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBkZWZpbml0aW9uLCAic3VibWl0dGVkIiBtZWFucyBhbnkgZm9ybSBvZiBlbGVjdHJvbmljLCB2ZXJiYWwsIG9yIHdyaXR0ZW4gY29tbXVuaWNhdGlvbiBzZW50IHRvIHRoZSBMaWNlbnNvciBvciBpdHMgcmVwcmVzZW50YXRpdmVzLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIGNvbW11bmljYXRpb24gb24gZWxlY3Ryb25pYyBtYWlsaW5nIGxpc3RzLCBzb3VyY2UgY29kZSBjb250cm9sIHN5c3RlbXMsIGFuZCBpc3N1ZSB0cmFja2luZyBzeXN0ZW1zIHRoYXQgYXJlIG1hbmFnZWQgYnksIG9yIG9uIGJlaGFsZiBvZiwgdGhlIExpY2Vuc29yIGZvciB0aGUgcHVycG9zZSBvZiBkaXNjdXNzaW5nIGFuZCBpbXByb3ZpbmcgdGhlIFdvcmssIGJ1dCBleGNsdWRpbmcgY29tbXVuaWNhdGlvbiB0aGF0IGlzIGNvbnNwaWN1b3VzbHkgbWFya2VkIG9yIG90aGVyd2lzZSBkZXNpZ25hdGVkIGluIHdyaXRpbmcgYnkgdGhlIGNvcHlyaWdodCBvd25lciBhcyAiTm90IGEgQ29udHJpYnV0aW9uLiIKCiJDb250cmlidXRvciIgc2hhbGwgbWVhbiBMaWNlbnNvciBhbmQgYW55IGluZGl2aWR1YWwgb3IgTGVnYWwgRW50aXR5IG9uIGJlaGFsZiBvZiB3aG9tIGEgQ29udHJpYnV0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGJ5IExpY2Vuc29yIGFuZCBzdWJzZXF1ZW50bHkgaW5jb3Jwb3JhdGVkIHdpdGhpbiB0aGUgV29yay4KCjIuIEdyYW50IG9mIENvcHlyaWdodCBMaWNlbnNlLiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIExpY2Vuc2UsIGVhY2ggQ29udHJpYnV0b3IgaGVyZWJ5IGdyYW50cyB0byBZb3UgYSBwZXJwZXR1YWwsIHdvcmxkd2lkZSwgbm9uLWV4Y2x1c2l2ZSwgbm8tY2hhcmdlLCByb3lhbHR5LWZyZWUsIGlycmV2b2NhYmxlIGNvcHlyaWdodCBsaWNlbnNlIHRvIHJlcHJvZHVjZSwgcHJlcGFyZSBEZXJpdmF0aXZlIFdvcmtzIG9mLCBwdWJsaWNseSBkaXNwbGF5LCBwdWJsaWNseSBwZXJmb3JtLCBzdWJsaWNlbnNlLCBhbmQgZGlzdHJpYnV0ZSB0aGUgV29yayBhbmQgc3VjaCBEZXJpdmF0aXZlIFdvcmtzIGluIFNvdXJjZSBvciBPYmplY3QgZm9ybS4KCjMuIEdyYW50IG9mIFBhdGVudCBMaWNlbnNlLiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIExpY2Vuc2UsIGVhY2ggQ29udHJpYnV0b3IgaGVyZWJ5IGdyYW50cyB0byBZb3UgYSBwZXJwZXR1YWwsIHdvcmxkd2lkZSwgbm9uLWV4Y2x1c2l2ZSwgbm8tY2hhcmdlLCByb3lhbHR5LWZyZWUsIGlycmV2b2NhYmxlIChleGNlcHQgYXMgc3RhdGVkIGluIHRoaXMgc2VjdGlvbikgcGF0ZW50IGxpY2Vuc2UgdG8gbWFrZSwgaGF2ZSBtYWRlLCB1c2UsIG9mZmVyIHRvIHNlbGwsIHNlbGwsIGltcG9ydCwgYW5kIG90aGVyd2lzZSB0cmFuc2ZlciB0aGUgV29yaywgd2hlcmUgc3VjaCBsaWNlbnNlIGFwcGxpZXMgb25seSB0byB0aG9zZSBwYXRlbnQgY2xhaW1zIGxpY2Vuc2FibGUgYnkgc3VjaCBDb250cmlidXRvciB0aGF0IGFyZSBuZWNlc3NhcmlseSBpbmZyaW5nZWQgYnkgdGhlaXIgQ29udHJpYnV0aW9uKHMpIGFsb25lIG9yIGJ5IGNvbWJpbmF0aW9uIG9mIHRoZWlyIENvbnRyaWJ1dGlvbihzKSB3aXRoIHRoZSBXb3JrIHRvIHdoaWNoIHN1Y2ggQ29udHJpYnV0aW9uKHMpIHdhcyBzdWJtaXR0ZWQuIElmIFlvdSBpbnN0aXR1dGUgcGF0ZW50IGxpdGlnYXRpb24gYWdhaW5zdCBhbnkgZW50aXR5IChpbmNsdWRpbmcgYSBjcm9zcy1jbGFpbSBvciBjb3VudGVyY2xhaW0gaW4gYSBsYXdzdWl0KSBhbGxlZ2luZyB0aGF0IHRoZSBXb3JrIG9yIGEgQ29udHJpYnV0aW9uIGluY29ycG9yYXRlZCB3aXRoaW4gdGhlIFdvcmsgY29uc3RpdHV0ZXMgZGlyZWN0IG9yIGNvbnRyaWJ1dG9yeSBwYXRlbnQgaW5mcmluZ2VtZW50LCB0aGVuIGFueSBwYXRlbnQgbGljZW5zZXMgZ3JhbnRlZCB0byBZb3UgdW5kZXIgdGhpcyBMaWNlbnNlIGZvciB0aGF0IFdvcmsgc2hhbGwgdGVybWluYXRlIGFzIG9mIHRoZSBkYXRlIHN1Y2ggbGl0aWdhdGlvbiBpcyBmaWxlZC4KCjQuIFJlZGlzdHJpYnV0aW9uLiBZb3UgbWF5IHJlcHJvZHVjZSBhbmQgZGlzdHJpYnV0ZSBjb3BpZXMgb2YgdGhlIFdvcmsgb3IgRGVyaXZhdGl2ZSBXb3JrcyB0aGVyZW9mIGluIGFueSBtZWRpdW0sIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb25zLCBhbmQgaW4gU291cmNlIG9yIE9iamVjdCBmb3JtLCBwcm92aWRlZCB0aGF0IFlvdSBtZWV0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKCiAgICAgKGEpIFlvdSBtdXN0IGdpdmUgYW55IG90aGVyIHJlY2lwaWVudHMgb2YgdGhlIFdvcmsgb3IgRGVyaXZhdGl2ZSBXb3JrcyBhIGNvcHkgb2YgdGhpcyBMaWNlbnNlOyBhbmQKCiAgICAgKGIpIFlvdSBtdXN0IGNhdXNlIGFueSBtb2RpZmllZCBmaWxlcyB0byBjYXJyeSBwcm9taW5lbnQgbm90aWNlcyBzdGF0aW5nIHRoYXQgWW91IGNoYW5nZWQgdGhlIGZpbGVzOyBhbmQKCiAgICAgKGMpIFlvdSBtdXN0IHJldGFpbiwgaW4gdGhlIFNvdXJjZSBmb3JtIG9mIGFueSBEZXJpdmF0aXZlIFdvcmtzIHRoYXQgWW91IGRpc3RyaWJ1dGUsIGFsbCBjb3B5cmlnaHQsIHBhdGVudCwgdHJhZGVtYXJrLCBhbmQgYXR0cmlidXRpb24gbm90aWNlcyBmcm9tIHRoZSBTb3VyY2UgZm9ybSBvZiB0aGUgV29yaywgZXhjbHVkaW5nIHRob3NlIG5vdGljZXMgdGhhdCBkbyBub3QgcGVydGFpbiB0byBhbnkgcGFydCBvZiB0aGUgRGVyaXZhdGl2ZSBXb3JrczsgYW5kCgogICAgIChkKSBJZiB0aGUgV29yayBpbmNsdWRlcyBhICJOT1RJQ0UiIHRleHQgZmlsZSBhcyBwYXJ0IG9mIGl0cyBkaXN0cmlidXRpb24sIHRoZW4gYW55IERlcml2YXRpdmUgV29ya3MgdGhhdCBZb3UgZGlzdHJpYnV0ZSBtdXN0IGluY2x1ZGUgYSByZWFkYWJsZSBjb3B5IG9mIHRoZSBhdHRyaWJ1dGlvbiBub3RpY2VzIGNvbnRhaW5lZCB3aXRoaW4gc3VjaCBOT1RJQ0UgZmlsZSwgZXhjbHVkaW5nIHRob3NlIG5vdGljZXMgdGhhdCBkbyBub3QgcGVydGFpbiB0byBhbnkgcGFydCBvZiB0aGUgRGVyaXZhdGl2ZSBXb3JrcywgaW4gYXQgbGVhc3Qgb25lIG9mIHRoZSBmb2xsb3dpbmcgcGxhY2VzOiB3aXRoaW4gYSBOT1RJQ0UgdGV4dCBmaWxlIGRpc3RyaWJ1dGVkIGFzIHBhcnQgb2YgdGhlIERlcml2YXRpdmUgV29ya3M7IHdpdGhpbiB0aGUgU291cmNlIGZvcm0gb3IgZG9jdW1lbnRhdGlvbiwgaWYgcHJvdmlkZWQgYWxvbmcgd2l0aCB0aGUgRGVyaXZhdGl2ZSBXb3Jrczsgb3IsIHdpdGhpbiBhIGRpc3BsYXkgZ2VuZXJhdGVkIGJ5IHRoZSBEZXJpdmF0aXZlIFdvcmtzLCBpZiBhbmQgd2hlcmV2ZXIgc3VjaCB0aGlyZC1wYXJ0eSBub3RpY2VzIG5vcm1hbGx5IGFwcGVhci4gVGhlIGNvbnRlbnRzIG9mIHRoZSBOT1RJQ0UgZmlsZSBhcmUgZm9yIGluZm9ybWF0aW9uYWwgcHVycG9zZXMgb25seSBhbmQgZG8gbm90IG1vZGlmeSB0aGUgTGljZW5zZS4gWW91IG1heSBhZGQgWW91ciBvd24gYXR0cmlidXRpb24gbm90aWNlcyB3aXRoaW4gRGVyaXZhdGl2ZSBXb3JrcyB0aGF0IFlvdSBkaXN0cmlidXRlLCBhbG9uZ3NpZGUgb3IgYXMgYW4gYWRkZW5kdW0gdG8gdGhlIE5PVElDRSB0ZXh0IGZyb20gdGhlIFdvcmssIHByb3ZpZGVkIHRoYXQgc3VjaCBhZGRpdGlvbmFsIGF0dHJpYnV0aW9uIG5vdGljZXMgY2Fubm90IGJlIGNvbnN0cnVlZCBhcyBtb2RpZnlpbmcgdGhlIExpY2Vuc2UuCgogICAgIFlvdSBtYXkgYWRkIFlvdXIgb3duIGNvcHlyaWdodCBzdGF0ZW1lbnQgdG8gWW91ciBtb2RpZmljYXRpb25zIGFuZCBtYXkgcHJvdmlkZSBhZGRpdGlvbmFsIG9yIGRpZmZlcmVudCBsaWNlbnNlIHRlcm1zIGFuZCBjb25kaXRpb25zIGZvciB1c2UsIHJlcHJvZHVjdGlvbiwgb3IgZGlzdHJpYnV0aW9uIG9mIFlvdXIgbW9kaWZpY2F0aW9ucywgb3IgZm9yIGFueSBzdWNoIERlcml2YXRpdmUgV29ya3MgYXMgYSB3aG9sZSwgcHJvdmlkZWQgWW91ciB1c2UsIHJlcHJvZHVjdGlvbiwgYW5kIGRpc3RyaWJ1dGlvbiBvZiB0aGUgV29yayBvdGhlcndpc2UgY29tcGxpZXMgd2l0aCB0aGUgY29uZGl0aW9ucyBzdGF0ZWQgaW4gdGhpcyBMaWNlbnNlLgoKNS4gU3VibWlzc2lvbiBvZiBDb250cmlidXRpb25zLiBVbmxlc3MgWW91IGV4cGxpY2l0bHkgc3RhdGUgb3RoZXJ3aXNlLCBhbnkgQ29udHJpYnV0aW9uIGludGVudGlvbmFsbHkgc3VibWl0dGVkIGZvciBpbmNsdXNpb24gaW4gdGhlIFdvcmsgYnkgWW91IHRvIHRoZSBMaWNlbnNvciBzaGFsbCBiZSB1bmRlciB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBMaWNlbnNlLCB3aXRob3V0IGFueSBhZGRpdGlvbmFsIHRlcm1zIG9yIGNvbmRpdGlvbnMuIE5vdHdpdGhzdGFuZGluZyB0aGUgYWJvdmUsIG5vdGhpbmcgaGVyZWluIHNoYWxsIHN1cGVyc2VkZSBvciBtb2RpZnkgdGhlIHRlcm1zIG9mIGFueSBzZXBhcmF0ZSBsaWNlbnNlIGFncmVlbWVudCB5b3UgbWF5IGhhdmUgZXhlY3V0ZWQgd2l0aCBMaWNlbnNvciByZWdhcmRpbmcgc3VjaCBDb250cmlidXRpb25zLgoKNi4gVHJhZGVtYXJrcy4gVGhpcyBMaWNlbnNlIGRvZXMgbm90IGdyYW50IHBlcm1pc3Npb24gdG8gdXNlIHRoZSB0cmFkZSBuYW1lcywgdHJhZGVtYXJrcywgc2VydmljZSBtYXJrcywgb3IgcHJvZHVjdCBuYW1lcyBvZiB0aGUgTGljZW5zb3IsIGV4Y2VwdCBhcyByZXF1aXJlZCBmb3IgcmVhc29uYWJsZSBhbmQgY3VzdG9tYXJ5IHVzZSBpbiBkZXNjcmliaW5nIHRoZSBvcmlnaW4gb2YgdGhlIFdvcmsgYW5kIHJlcHJvZHVjaW5nIHRoZSBjb250ZW50IG9mIHRoZSBOT1RJQ0UgZmlsZS4KCjcuIERpc2NsYWltZXIgb2YgV2FycmFudHkuIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgTGljZW5zb3IgcHJvdmlkZXMgdGhlIFdvcmsgKGFuZCBlYWNoIENvbnRyaWJ1dG9yIHByb3ZpZGVzIGl0cyBDb250cmlidXRpb25zKSBvbiBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZCwgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGFueSB3YXJyYW50aWVzIG9yIGNvbmRpdGlvbnMgb2YgVElUTEUsIE5PTi1JTkZSSU5HRU1FTlQsIE1FUkNIQU5UQUJJTElUWSwgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFlvdSBhcmUgc29sZWx5IHJlc3BvbnNpYmxlIGZvciBkZXRlcm1pbmluZyB0aGUgYXBwcm9wcmlhdGVuZXNzIG9mIHVzaW5nIG9yIHJlZGlzdHJpYnV0aW5nIHRoZSBXb3JrIGFuZCBhc3N1bWUgYW55IHJpc2tzIGFzc29jaWF0ZWQgd2l0aCBZb3VyIGV4ZXJjaXNlIG9mIHBlcm1pc3Npb25zIHVuZGVyIHRoaXMgTGljZW5zZS4KCjguIExpbWl0YXRpb24gb2YgTGlhYmlsaXR5LiBJbiBubyBldmVudCBhbmQgdW5kZXIgbm8gbGVnYWwgdGhlb3J5LCB3aGV0aGVyIGluIHRvcnQgKGluY2x1ZGluZyBuZWdsaWdlbmNlKSwgY29udHJhY3QsIG9yIG90aGVyd2lzZSwgdW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IChzdWNoIGFzIGRlbGliZXJhdGUgYW5kIGdyb3NzbHkgbmVnbGlnZW50IGFjdHMpIG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzaGFsbCBhbnkgQ29udHJpYnV0b3IgYmUgbGlhYmxlIHRvIFlvdSBmb3IgZGFtYWdlcywgaW5jbHVkaW5nIGFueSBkaXJlY3QsIGluZGlyZWN0LCBzcGVjaWFsLCBpbmNpZGVudGFsLCBvciBjb25zZXF1ZW50aWFsIGRhbWFnZXMgb2YgYW55IGNoYXJhY3RlciBhcmlzaW5nIGFzIGEgcmVzdWx0IG9mIHRoaXMgTGljZW5zZSBvciBvdXQgb2YgdGhlIHVzZSBvciBpbmFiaWxpdHkgdG8gdXNlIHRoZSBXb3JrIChpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIGRhbWFnZXMgZm9yIGxvc3Mgb2YgZ29vZHdpbGwsIHdvcmsgc3RvcHBhZ2UsIGNvbXB1dGVyIGZhaWx1cmUgb3IgbWFsZnVuY3Rpb24sIG9yIGFueSBhbmQgYWxsIG90aGVyIGNvbW1lcmNpYWwgZGFtYWdlcyBvciBsb3NzZXMpLCBldmVuIGlmIHN1Y2ggQ29udHJpYnV0b3IgaGFzIGJlZW4gYWR2aXNlZCBvZiB0aGUgcG9zc2liaWxpdHkgb2Ygc3VjaCBkYW1hZ2VzLgoKOS4gQWNjZXB0aW5nIFdhcnJhbnR5IG9yIEFkZGl0aW9uYWwgTGlhYmlsaXR5LiBXaGlsZSByZWRpc3RyaWJ1dGluZyB0aGUgV29yayBvciBEZXJpdmF0aXZlIFdvcmtzIHRoZXJlb2YsIFlvdSBtYXkgY2hvb3NlIHRvIG9mZmVyLCBhbmQgY2hhcmdlIGEgZmVlIGZvciwgYWNjZXB0YW5jZSBvZiBzdXBwb3J0LCB3YXJyYW50eSwgaW5kZW1uaXR5LCBvciBvdGhlciBsaWFiaWxpdHkgb2JsaWdhdGlvbnMgYW5kL29yIHJpZ2h0cyBjb25zaXN0ZW50IHdpdGggdGhpcyBMaWNlbnNlLiBIb3dldmVyLCBpbiBhY2NlcHRpbmcgc3VjaCBvYmxpZ2F0aW9ucywgWW91IG1heSBhY3Qgb25seSBvbiBZb3VyIG93biBiZWhhbGYgYW5kIG9uIFlvdXIgc29sZSByZXNwb25zaWJpbGl0eSwgbm90IG9uIGJlaGFsZiBvZiBhbnkgb3RoZXIgQ29udHJpYnV0b3IsIGFuZCBvbmx5IGlmIFlvdSBhZ3JlZSB0byBpbmRlbW5pZnksIGRlZmVuZCwgYW5kIGhvbGQgZWFjaCBDb250cmlidXRvciBoYXJtbGVzcyBmb3IgYW55IGxpYWJpbGl0eSBpbmN1cnJlZCBieSwgb3IgY2xhaW1zIGFzc2VydGVkIGFnYWluc3QsIHN1Y2ggQ29udHJpYnV0b3IgYnkgcmVhc29uIG9mIHlvdXIgYWNjZXB0aW5nIGFueSBzdWNoIHdhcnJhbnR5IG9yIGFkZGl0aW9uYWwgbGlhYmlsaXR5LgoKRU5EIE9GIFRFUk1TIEFORCBDT05ESVRJT05TCgpBUFBFTkRJWDogSG93IHRvIGFwcGx5IHRoZSBBcGFjaGUgTGljZW5zZSB0byB5b3VyIHdvcmsuCgpUbyBhcHBseSB0aGUgQXBhY2hlIExpY2Vuc2UgdG8geW91ciB3b3JrLCBhdHRhY2ggdGhlIGZvbGxvd2luZyBib2lsZXJwbGF0ZSBub3RpY2UsIHdpdGggdGhlIGZpZWxkcyBlbmNsb3NlZCBieSBicmFja2V0cyAiW10iIHJlcGxhY2VkIHdpdGggeW91ciBvd24gaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24uIChEb24ndCBpbmNsdWRlIHRoZSBicmFja2V0cyEpICBUaGUgdGV4dCBzaG91bGQgYmUgZW5jbG9zZWQgaW4gdGhlIGFwcHJvcHJpYXRlIGNvbW1lbnQgc3ludGF4IGZvciB0aGUgZmlsZSBmb3JtYXQuIFdlIGFsc28gcmVjb21tZW5kIHRoYXQgYSBmaWxlIG9yIGNsYXNzIG5hbWUgYW5kIGRlc2NyaXB0aW9uIG9mIHB1cnBvc2UgYmUgaW5jbHVkZWQgb24gdGhlIHNhbWUgInByaW50ZWQgcGFnZSIgYXMgdGhlIGNvcHlyaWdodCBub3RpY2UgZm9yIGVhc2llciBpZGVudGlmaWNhdGlvbiB3aXRoaW4gdGhpcmQtcGFydHkgYXJjaGl2ZXMuCgpDb3B5cmlnaHQgW3l5eXldIFtuYW1lIG9mIGNvcHlyaWdodCBvd25lcl0KCkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwp5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCgpVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgpTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgo=","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/gson/com.google.code.gson@2.2.2","externalReferences":[{"url":"http://code.google.com/p/google-gson/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.code.gson/gson/2.2.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2012-07-03T01:01:56+00:00"}]},{"bom-ref":"pkg:maven/java-allocation-instrumenter/com.google.code.java-allocation-instrumenter@3.0","type":"library","author":"Google, Inc., Jeremy Manson","group":"java-allocation-instrumenter","name":"com.google.code.java-allocation-instrumenter","version":"3.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/java-allocation-instrumenter/com.google.code.java-allocation-instrumenter@3.0","externalReferences":[{"url":"https://github.com/google/allocation-instrumenter/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.code.java-allocation-instrumenter/java-allocation-instrumenter/3.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2015-02-19T20:11:10+00:00"}]},{"bom-ref":"pkg:maven/error_prone_annotations/com.google.errorprone@2.11.0","type":"library","author":"Google LLC, Eddie Aftandilian","group":"error_prone_annotations","name":"com.google.errorprone","version":"2.11.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/error_prone_annotations/com.google.errorprone@2.11.0","externalReferences":[{"url":"https://errorprone.info/error_prone_annotations","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.errorprone/error_prone_annotations/2.11.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-testlib/pom.xml"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/guava/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"guava/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2022-01-25T19:09:24+00:00"}]},{"bom-ref":"pkg:maven/failureaccess/com.google.guava@1.0.1","type":"library","author":"Kevin Bourrillion","group":"failureaccess","name":"com.google.guava","version":"1.0.1","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/failureaccess/com.google.guava@1.0.1","externalReferences":[{"url":"https://github.com/google/guava/failureaccess","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.guava/failureaccess/1.0.1","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava/pom.xml"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"location","value":"guava/pom.xml"},{"name":"published_at","value":"2018-11-19T17:57:26+00:00"}]},{"bom-ref":"pkg:maven/guava/com.google.guava","type":"library","group":"guava","name":"com.google.guava","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guava/com.google.guava","properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-bom/pom.xml"},{"name":"location","value":"android/guava-testlib/pom.xml"},{"name":"location","value":"guava-bom/pom.xml"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"}]},{"bom-ref":"pkg:maven/guava/com.google.guava@18.0","type":"library","author":"Kevin Bourrillion","group":"guava","name":"com.google.guava","version":"18.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guava/com.google.guava@18.0","externalReferences":[{"url":"http://code.google.com/p/guava-libraries/guava","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.guava/guava/18.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2014-08-25T18:48:34+00:00"}]},{"bom-ref":"pkg:maven/guava-gwt/com.google.guava","type":"library","group":"guava-gwt","name":"com.google.guava","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guava-gwt/com.google.guava","properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"guava-bom/pom.xml"}]},{"bom-ref":"pkg:maven/guava-testlib/com.google.guava","type":"library","group":"guava-testlib","name":"com.google.guava","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guava-testlib/com.google.guava","properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-bom/pom.xml"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"guava-bom/pom.xml"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"}]},{"bom-ref":"pkg:maven/guava-tests/com.google.guava","type":"library","group":"guava-tests","name":"com.google.guava","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guava-tests/com.google.guava","properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"guava-gwt/pom.xml"}]},{"bom-ref":"pkg:maven/listenablefuture/com.google.guava@9999.0-empty-to-avoid-conflict-with-guava","type":"library","author":"Kevin Bourrillion","group":"listenablefuture","name":"com.google.guava","version":"9999.0-empty-to-avoid-conflict-with-guava","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/listenablefuture/com.google.guava@9999.0-empty-to-avoid-conflict-with-guava","externalReferences":[{"url":"https://github.com/google/guava/listenablefuture","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava/pom.xml"},{"name":"location","value":"guava/pom.xml"},{"name":"published_at","value":"2018-09-11T19:40:43+00:00"}]},{"bom-ref":"pkg:maven/gwt-dev/com.google.gwt@2.9.0","type":"library","group":"gwt-dev","name":"com.google.gwt","version":"2.9.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/gwt-dev/com.google.gwt@2.9.0","externalReferences":[{"url":"http://www.gwtproject.org/gwt-dev/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.gwt/gwt-dev/2.9.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"provided"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"published_at","value":"2020-05-02T00:48:16+00:00"}]},{"bom-ref":"pkg:maven/gwt-user/com.google.gwt@2.9.0","type":"library","group":"gwt-user","name":"com.google.gwt","version":"2.9.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/gwt-user/com.google.gwt@2.9.0","externalReferences":[{"url":"http://www.gwtproject.org/gwt-user/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.gwt/gwt-user/2.9.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"published_at","value":"2020-05-02T00:48:28+00:00"}]},{"bom-ref":"pkg:maven/guice-assistedinject/com.google.inject.extensions@3.0","type":"library","author":"Google, Inc., id","group":"guice-assistedinject","name":"com.google.inject.extensions","version":"3.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guice-assistedinject/com.google.inject.extensions@3.0","externalReferences":[{"url":"http://code.google.com/p/google-guice/extensions-parent/guice-assistedinject/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.inject.extensions/guice-assistedinject/3.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2011-03-25T18:20:53+00:00"}]},{"bom-ref":"pkg:maven/guice-multibindings/com.google.inject.extensions@3.0","type":"library","author":"Google, Inc., id","group":"guice-multibindings","name":"com.google.inject.extensions","version":"3.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guice-multibindings/com.google.inject.extensions@3.0","externalReferences":[{"url":"http://code.google.com/p/google-guice/extensions-parent/guice-multibindings/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.inject.extensions/guice-multibindings/3.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2011-03-25T18:21:15+00:00"}]},{"bom-ref":"pkg:maven/guice/com.google.inject@3.0","type":"library","author":"Google, Inc., id","group":"guice","name":"com.google.inject","version":"3.0","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/guice/com.google.inject@3.0","externalReferences":[{"url":"http://code.google.com/p/google-guice/guice/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.inject/guice/3.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2011-03-25T18:19:45+00:00"}]},{"bom-ref":"pkg:maven/j2objc-annotations/com.google.j2objc@1.3","type":"library","group":"j2objc-annotations","name":"com.google.j2objc","version":"1.3","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/j2objc-annotations/com.google.j2objc@1.3","externalReferences":[{"url":"https://github.com/google/j2objc/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.j2objc/j2objc-annotations/1.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-testlib/pom.xml"},{"name":"location","value":"android/guava/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"},{"name":"location","value":"guava/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2017-01-18T23:09:54+00:00"}]},{"bom-ref":"pkg:maven/jimfs/com.google.jimfs@1.2","type":"library","author":"Google Inc., Colin Decker","group":"jimfs","name":"com.google.jimfs","version":"1.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/jimfs/com.google.jimfs@1.2","externalReferences":[{"url":"https://github.com/google/jimfs/jimfs","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.jimfs/jimfs/1.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-01-05T21:11:47+00:00"}]},{"bom-ref":"pkg:maven/truth-java8-extension/com.google.truth.extensions@1.1.2","type":"library","author":"Christian Gruber, Kurt Alfred Kluever, David Saff, David B","group":"truth-java8-extension","name":"com.google.truth.extensions","version":"1.1.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"QXBhY2hlIExpY2Vuc2UKVmVyc2lvbiAyLjAsIEphbnVhcnkgMjAwNApodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvCgpURVJNUyBBTkQgQ09ORElUSU9OUyBGT1IgVVNFLCBSRVBST0RVQ1RJT04sIEFORCBESVNUUklCVVRJT04KCjEuIERlZmluaXRpb25zLgoKIkxpY2Vuc2UiIHNoYWxsIG1lYW4gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGZvciB1c2UsIHJlcHJvZHVjdGlvbiwgYW5kIGRpc3RyaWJ1dGlvbiBhcyBkZWZpbmVkIGJ5IFNlY3Rpb25zIDEgdGhyb3VnaCA5IG9mIHRoaXMgZG9jdW1lbnQuCgoiTGljZW5zb3IiIHNoYWxsIG1lYW4gdGhlIGNvcHlyaWdodCBvd25lciBvciBlbnRpdHkgYXV0aG9yaXplZCBieSB0aGUgY29weXJpZ2h0IG93bmVyIHRoYXQgaXMgZ3JhbnRpbmcgdGhlIExpY2Vuc2UuCgoiTGVnYWwgRW50aXR5IiBzaGFsbCBtZWFuIHRoZSB1bmlvbiBvZiB0aGUgYWN0aW5nIGVudGl0eSBhbmQgYWxsIG90aGVyIGVudGl0aWVzIHRoYXQgY29udHJvbCwgYXJlIGNvbnRyb2xsZWQgYnksIG9yIGFyZSB1bmRlciBjb21tb24gY29udHJvbCB3aXRoIHRoYXQgZW50aXR5LiBGb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgZGVmaW5pdGlvbiwgImNvbnRyb2wiIG1lYW5zIChpKSB0aGUgcG93ZXIsIGRpcmVjdCBvciBpbmRpcmVjdCwgdG8gY2F1c2UgdGhlIGRpcmVjdGlvbiBvciBtYW5hZ2VtZW50IG9mIHN1Y2ggZW50aXR5LCB3aGV0aGVyIGJ5IGNvbnRyYWN0IG9yIG90aGVyd2lzZSwgb3IgKGlpKSBvd25lcnNoaXAgb2YgZmlmdHkgcGVyY2VudCAoNTAlKSBvciBtb3JlIG9mIHRoZSBvdXRzdGFuZGluZyBzaGFyZXMsIG9yIChpaWkpIGJlbmVmaWNpYWwgb3duZXJzaGlwIG9mIHN1Y2ggZW50aXR5LgoKIllvdSIgKG9yICJZb3VyIikgc2hhbGwgbWVhbiBhbiBpbmRpdmlkdWFsIG9yIExlZ2FsIEVudGl0eSBleGVyY2lzaW5nIHBlcm1pc3Npb25zIGdyYW50ZWQgYnkgdGhpcyBMaWNlbnNlLgoKIlNvdXJjZSIgZm9ybSBzaGFsbCBtZWFuIHRoZSBwcmVmZXJyZWQgZm9ybSBmb3IgbWFraW5nIG1vZGlmaWNhdGlvbnMsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gc29mdHdhcmUgc291cmNlIGNvZGUsIGRvY3VtZW50YXRpb24gc291cmNlLCBhbmQgY29uZmlndXJhdGlvbiBmaWxlcy4KCiJPYmplY3QiIGZvcm0gc2hhbGwgbWVhbiBhbnkgZm9ybSByZXN1bHRpbmcgZnJvbSBtZWNoYW5pY2FsIHRyYW5zZm9ybWF0aW9uIG9yIHRyYW5zbGF0aW9uIG9mIGEgU291cmNlIGZvcm0sIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gY29tcGlsZWQgb2JqZWN0IGNvZGUsIGdlbmVyYXRlZCBkb2N1bWVudGF0aW9uLCBhbmQgY29udmVyc2lvbnMgdG8gb3RoZXIgbWVkaWEgdHlwZXMuCgoiV29yayIgc2hhbGwgbWVhbiB0aGUgd29yayBvZiBhdXRob3JzaGlwLCB3aGV0aGVyIGluIFNvdXJjZSBvciBPYmplY3QgZm9ybSwgbWFkZSBhdmFpbGFibGUgdW5kZXIgdGhlIExpY2Vuc2UsIGFzIGluZGljYXRlZCBieSBhIGNvcHlyaWdodCBub3RpY2UgdGhhdCBpcyBpbmNsdWRlZCBpbiBvciBhdHRhY2hlZCB0byB0aGUgd29yayAoYW4gZXhhbXBsZSBpcyBwcm92aWRlZCBpbiB0aGUgQXBwZW5kaXggYmVsb3cpLgoKIkRlcml2YXRpdmUgV29ya3MiIHNoYWxsIG1lYW4gYW55IHdvcmssIHdoZXRoZXIgaW4gU291cmNlIG9yIE9iamVjdCBmb3JtLCB0aGF0IGlzIGJhc2VkIG9uIChvciBkZXJpdmVkIGZyb20pIHRoZSBXb3JrIGFuZCBmb3Igd2hpY2ggdGhlIGVkaXRvcmlhbCByZXZpc2lvbnMsIGFubm90YXRpb25zLCBlbGFib3JhdGlvbnMsIG9yIG90aGVyIG1vZGlmaWNhdGlvbnMgcmVwcmVzZW50LCBhcyBhIHdob2xlLCBhbiBvcmlnaW5hbCB3b3JrIG9mIGF1dGhvcnNoaXAuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBMaWNlbnNlLCBEZXJpdmF0aXZlIFdvcmtzIHNoYWxsIG5vdCBpbmNsdWRlIHdvcmtzIHRoYXQgcmVtYWluIHNlcGFyYWJsZSBmcm9tLCBvciBtZXJlbHkgbGluayAob3IgYmluZCBieSBuYW1lKSB0byB0aGUgaW50ZXJmYWNlcyBvZiwgdGhlIFdvcmsgYW5kIERlcml2YXRpdmUgV29ya3MgdGhlcmVvZi4KCiJDb250cmlidXRpb24iIHNoYWxsIG1lYW4gYW55IHdvcmsgb2YgYXV0aG9yc2hpcCwgaW5jbHVkaW5nIHRoZSBvcmlnaW5hbCB2ZXJzaW9uIG9mIHRoZSBXb3JrIGFuZCBhbnkgbW9kaWZpY2F0aW9ucyBvciBhZGRpdGlvbnMgdG8gdGhhdCBXb3JrIG9yIERlcml2YXRpdmUgV29ya3MgdGhlcmVvZiwgdGhhdCBpcyBpbnRlbnRpb25hbGx5IHN1Ym1pdHRlZCB0byBMaWNlbnNvciBmb3IgaW5jbHVzaW9uIGluIHRoZSBXb3JrIGJ5IHRoZSBjb3B5cmlnaHQgb3duZXIgb3IgYnkgYW4gaW5kaXZpZHVhbCBvciBMZWdhbCBFbnRpdHkgYXV0aG9yaXplZCB0byBzdWJtaXQgb24gYmVoYWxmIG9mIHRoZSBjb3B5cmlnaHQgb3duZXIuIEZvciB0aGUgcHVycG9zZXMgb2YgdGhpcyBkZWZpbml0aW9uLCAic3VibWl0dGVkIiBtZWFucyBhbnkgZm9ybSBvZiBlbGVjdHJvbmljLCB2ZXJiYWwsIG9yIHdyaXR0ZW4gY29tbXVuaWNhdGlvbiBzZW50IHRvIHRoZSBMaWNlbnNvciBvciBpdHMgcmVwcmVzZW50YXRpdmVzLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIGNvbW11bmljYXRpb24gb24gZWxlY3Ryb25pYyBtYWlsaW5nIGxpc3RzLCBzb3VyY2UgY29kZSBjb250cm9sIHN5c3RlbXMsIGFuZCBpc3N1ZSB0cmFja2luZyBzeXN0ZW1zIHRoYXQgYXJlIG1hbmFnZWQgYnksIG9yIG9uIGJlaGFsZiBvZiwgdGhlIExpY2Vuc29yIGZvciB0aGUgcHVycG9zZSBvZiBkaXNjdXNzaW5nIGFuZCBpbXByb3ZpbmcgdGhlIFdvcmssIGJ1dCBleGNsdWRpbmcgY29tbXVuaWNhdGlvbiB0aGF0IGlzIGNvbnNwaWN1b3VzbHkgbWFya2VkIG9yIG90aGVyd2lzZSBkZXNpZ25hdGVkIGluIHdyaXRpbmcgYnkgdGhlIGNvcHlyaWdodCBvd25lciBhcyAiTm90IGEgQ29udHJpYnV0aW9uLiIKCiJDb250cmlidXRvciIgc2hhbGwgbWVhbiBMaWNlbnNvciBhbmQgYW55IGluZGl2aWR1YWwgb3IgTGVnYWwgRW50aXR5IG9uIGJlaGFsZiBvZiB3aG9tIGEgQ29udHJpYnV0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGJ5IExpY2Vuc29yIGFuZCBzdWJzZXF1ZW50bHkgaW5jb3Jwb3JhdGVkIHdpdGhpbiB0aGUgV29yay4KCjIuIEdyYW50IG9mIENvcHlyaWdodCBMaWNlbnNlLiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIExpY2Vuc2UsIGVhY2ggQ29udHJpYnV0b3IgaGVyZWJ5IGdyYW50cyB0byBZb3UgYSBwZXJwZXR1YWwsIHdvcmxkd2lkZSwgbm9uLWV4Y2x1c2l2ZSwgbm8tY2hhcmdlLCByb3lhbHR5LWZyZWUsIGlycmV2b2NhYmxlIGNvcHlyaWdodCBsaWNlbnNlIHRvIHJlcHJvZHVjZSwgcHJlcGFyZSBEZXJpdmF0aXZlIFdvcmtzIG9mLCBwdWJsaWNseSBkaXNwbGF5LCBwdWJsaWNseSBwZXJmb3JtLCBzdWJsaWNlbnNlLCBhbmQgZGlzdHJpYnV0ZSB0aGUgV29yayBhbmQgc3VjaCBEZXJpdmF0aXZlIFdvcmtzIGluIFNvdXJjZSBvciBPYmplY3QgZm9ybS4KCjMuIEdyYW50IG9mIFBhdGVudCBMaWNlbnNlLiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIExpY2Vuc2UsIGVhY2ggQ29udHJpYnV0b3IgaGVyZWJ5IGdyYW50cyB0byBZb3UgYSBwZXJwZXR1YWwsIHdvcmxkd2lkZSwgbm9uLWV4Y2x1c2l2ZSwgbm8tY2hhcmdlLCByb3lhbHR5LWZyZWUsIGlycmV2b2NhYmxlIChleGNlcHQgYXMgc3RhdGVkIGluIHRoaXMgc2VjdGlvbikgcGF0ZW50IGxpY2Vuc2UgdG8gbWFrZSwgaGF2ZSBtYWRlLCB1c2UsIG9mZmVyIHRvIHNlbGwsIHNlbGwsIGltcG9ydCwgYW5kIG90aGVyd2lzZSB0cmFuc2ZlciB0aGUgV29yaywgd2hlcmUgc3VjaCBsaWNlbnNlIGFwcGxpZXMgb25seSB0byB0aG9zZSBwYXRlbnQgY2xhaW1zIGxpY2Vuc2FibGUgYnkgc3VjaCBDb250cmlidXRvciB0aGF0IGFyZSBuZWNlc3NhcmlseSBpbmZyaW5nZWQgYnkgdGhlaXIgQ29udHJpYnV0aW9uKHMpIGFsb25lIG9yIGJ5IGNvbWJpbmF0aW9uIG9mIHRoZWlyIENvbnRyaWJ1dGlvbihzKSB3aXRoIHRoZSBXb3JrIHRvIHdoaWNoIHN1Y2ggQ29udHJpYnV0aW9uKHMpIHdhcyBzdWJtaXR0ZWQuIElmIFlvdSBpbnN0aXR1dGUgcGF0ZW50IGxpdGlnYXRpb24gYWdhaW5zdCBhbnkgZW50aXR5IChpbmNsdWRpbmcgYSBjcm9zcy1jbGFpbSBvciBjb3VudGVyY2xhaW0gaW4gYSBsYXdzdWl0KSBhbGxlZ2luZyB0aGF0IHRoZSBXb3JrIG9yIGEgQ29udHJpYnV0aW9uIGluY29ycG9yYXRlZCB3aXRoaW4gdGhlIFdvcmsgY29uc3RpdHV0ZXMgZGlyZWN0IG9yIGNvbnRyaWJ1dG9yeSBwYXRlbnQgaW5mcmluZ2VtZW50LCB0aGVuIGFueSBwYXRlbnQgbGljZW5zZXMgZ3JhbnRlZCB0byBZb3UgdW5kZXIgdGhpcyBMaWNlbnNlIGZvciB0aGF0IFdvcmsgc2hhbGwgdGVybWluYXRlIGFzIG9mIHRoZSBkYXRlIHN1Y2ggbGl0aWdhdGlvbiBpcyBmaWxlZC4KCjQuIFJlZGlzdHJpYnV0aW9uLiBZb3UgbWF5IHJlcHJvZHVjZSBhbmQgZGlzdHJpYnV0ZSBjb3BpZXMgb2YgdGhlIFdvcmsgb3IgRGVyaXZhdGl2ZSBXb3JrcyB0aGVyZW9mIGluIGFueSBtZWRpdW0sIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb25zLCBhbmQgaW4gU291cmNlIG9yIE9iamVjdCBmb3JtLCBwcm92aWRlZCB0aGF0IFlvdSBtZWV0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczoKCiAgICAgKGEpIFlvdSBtdXN0IGdpdmUgYW55IG90aGVyIHJlY2lwaWVudHMgb2YgdGhlIFdvcmsgb3IgRGVyaXZhdGl2ZSBXb3JrcyBhIGNvcHkgb2YgdGhpcyBMaWNlbnNlOyBhbmQKCiAgICAgKGIpIFlvdSBtdXN0IGNhdXNlIGFueSBtb2RpZmllZCBmaWxlcyB0byBjYXJyeSBwcm9taW5lbnQgbm90aWNlcyBzdGF0aW5nIHRoYXQgWW91IGNoYW5nZWQgdGhlIGZpbGVzOyBhbmQKCiAgICAgKGMpIFlvdSBtdXN0IHJldGFpbiwgaW4gdGhlIFNvdXJjZSBmb3JtIG9mIGFueSBEZXJpdmF0aXZlIFdvcmtzIHRoYXQgWW91IGRpc3RyaWJ1dGUsIGFsbCBjb3B5cmlnaHQsIHBhdGVudCwgdHJhZGVtYXJrLCBhbmQgYXR0cmlidXRpb24gbm90aWNlcyBmcm9tIHRoZSBTb3VyY2UgZm9ybSBvZiB0aGUgV29yaywgZXhjbHVkaW5nIHRob3NlIG5vdGljZXMgdGhhdCBkbyBub3QgcGVydGFpbiB0byBhbnkgcGFydCBvZiB0aGUgRGVyaXZhdGl2ZSBXb3JrczsgYW5kCgogICAgIChkKSBJZiB0aGUgV29yayBpbmNsdWRlcyBhICJOT1RJQ0UiIHRleHQgZmlsZSBhcyBwYXJ0IG9mIGl0cyBkaXN0cmlidXRpb24sIHRoZW4gYW55IERlcml2YXRpdmUgV29ya3MgdGhhdCBZb3UgZGlzdHJpYnV0ZSBtdXN0IGluY2x1ZGUgYSByZWFkYWJsZSBjb3B5IG9mIHRoZSBhdHRyaWJ1dGlvbiBub3RpY2VzIGNvbnRhaW5lZCB3aXRoaW4gc3VjaCBOT1RJQ0UgZmlsZSwgZXhjbHVkaW5nIHRob3NlIG5vdGljZXMgdGhhdCBkbyBub3QgcGVydGFpbiB0byBhbnkgcGFydCBvZiB0aGUgRGVyaXZhdGl2ZSBXb3JrcywgaW4gYXQgbGVhc3Qgb25lIG9mIHRoZSBmb2xsb3dpbmcgcGxhY2VzOiB3aXRoaW4gYSBOT1RJQ0UgdGV4dCBmaWxlIGRpc3RyaWJ1dGVkIGFzIHBhcnQgb2YgdGhlIERlcml2YXRpdmUgV29ya3M7IHdpdGhpbiB0aGUgU291cmNlIGZvcm0gb3IgZG9jdW1lbnRhdGlvbiwgaWYgcHJvdmlkZWQgYWxvbmcgd2l0aCB0aGUgRGVyaXZhdGl2ZSBXb3Jrczsgb3IsIHdpdGhpbiBhIGRpc3BsYXkgZ2VuZXJhdGVkIGJ5IHRoZSBEZXJpdmF0aXZlIFdvcmtzLCBpZiBhbmQgd2hlcmV2ZXIgc3VjaCB0aGlyZC1wYXJ0eSBub3RpY2VzIG5vcm1hbGx5IGFwcGVhci4gVGhlIGNvbnRlbnRzIG9mIHRoZSBOT1RJQ0UgZmlsZSBhcmUgZm9yIGluZm9ybWF0aW9uYWwgcHVycG9zZXMgb25seSBhbmQgZG8gbm90IG1vZGlmeSB0aGUgTGljZW5zZS4gWW91IG1heSBhZGQgWW91ciBvd24gYXR0cmlidXRpb24gbm90aWNlcyB3aXRoaW4gRGVyaXZhdGl2ZSBXb3JrcyB0aGF0IFlvdSBkaXN0cmlidXRlLCBhbG9uZ3NpZGUgb3IgYXMgYW4gYWRkZW5kdW0gdG8gdGhlIE5PVElDRSB0ZXh0IGZyb20gdGhlIFdvcmssIHByb3ZpZGVkIHRoYXQgc3VjaCBhZGRpdGlvbmFsIGF0dHJpYnV0aW9uIG5vdGljZXMgY2Fubm90IGJlIGNvbnN0cnVlZCBhcyBtb2RpZnlpbmcgdGhlIExpY2Vuc2UuCgogICAgIFlvdSBtYXkgYWRkIFlvdXIgb3duIGNvcHlyaWdodCBzdGF0ZW1lbnQgdG8gWW91ciBtb2RpZmljYXRpb25zIGFuZCBtYXkgcHJvdmlkZSBhZGRpdGlvbmFsIG9yIGRpZmZlcmVudCBsaWNlbnNlIHRlcm1zIGFuZCBjb25kaXRpb25zIGZvciB1c2UsIHJlcHJvZHVjdGlvbiwgb3IgZGlzdHJpYnV0aW9uIG9mIFlvdXIgbW9kaWZpY2F0aW9ucywgb3IgZm9yIGFueSBzdWNoIERlcml2YXRpdmUgV29ya3MgYXMgYSB3aG9sZSwgcHJvdmlkZWQgWW91ciB1c2UsIHJlcHJvZHVjdGlvbiwgYW5kIGRpc3RyaWJ1dGlvbiBvZiB0aGUgV29yayBvdGhlcndpc2UgY29tcGxpZXMgd2l0aCB0aGUgY29uZGl0aW9ucyBzdGF0ZWQgaW4gdGhpcyBMaWNlbnNlLgoKNS4gU3VibWlzc2lvbiBvZiBDb250cmlidXRpb25zLiBVbmxlc3MgWW91IGV4cGxpY2l0bHkgc3RhdGUgb3RoZXJ3aXNlLCBhbnkgQ29udHJpYnV0aW9uIGludGVudGlvbmFsbHkgc3VibWl0dGVkIGZvciBpbmNsdXNpb24gaW4gdGhlIFdvcmsgYnkgWW91IHRvIHRoZSBMaWNlbnNvciBzaGFsbCBiZSB1bmRlciB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBMaWNlbnNlLCB3aXRob3V0IGFueSBhZGRpdGlvbmFsIHRlcm1zIG9yIGNvbmRpdGlvbnMuIE5vdHdpdGhzdGFuZGluZyB0aGUgYWJvdmUsIG5vdGhpbmcgaGVyZWluIHNoYWxsIHN1cGVyc2VkZSBvciBtb2RpZnkgdGhlIHRlcm1zIG9mIGFueSBzZXBhcmF0ZSBsaWNlbnNlIGFncmVlbWVudCB5b3UgbWF5IGhhdmUgZXhlY3V0ZWQgd2l0aCBMaWNlbnNvciByZWdhcmRpbmcgc3VjaCBDb250cmlidXRpb25zLgoKNi4gVHJhZGVtYXJrcy4gVGhpcyBMaWNlbnNlIGRvZXMgbm90IGdyYW50IHBlcm1pc3Npb24gdG8gdXNlIHRoZSB0cmFkZSBuYW1lcywgdHJhZGVtYXJrcywgc2VydmljZSBtYXJrcywgb3IgcHJvZHVjdCBuYW1lcyBvZiB0aGUgTGljZW5zb3IsIGV4Y2VwdCBhcyByZXF1aXJlZCBmb3IgcmVhc29uYWJsZSBhbmQgY3VzdG9tYXJ5IHVzZSBpbiBkZXNjcmliaW5nIHRoZSBvcmlnaW4gb2YgdGhlIFdvcmsgYW5kIHJlcHJvZHVjaW5nIHRoZSBjb250ZW50IG9mIHRoZSBOT1RJQ0UgZmlsZS4KCjcuIERpc2NsYWltZXIgb2YgV2FycmFudHkuIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgTGljZW5zb3IgcHJvdmlkZXMgdGhlIFdvcmsgKGFuZCBlYWNoIENvbnRyaWJ1dG9yIHByb3ZpZGVzIGl0cyBDb250cmlidXRpb25zKSBvbiBhbiAiQVMgSVMiIEJBU0lTLCBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZCwgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGFueSB3YXJyYW50aWVzIG9yIGNvbmRpdGlvbnMgb2YgVElUTEUsIE5PTi1JTkZSSU5HRU1FTlQsIE1FUkNIQU5UQUJJTElUWSwgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFlvdSBhcmUgc29sZWx5IHJlc3BvbnNpYmxlIGZvciBkZXRlcm1pbmluZyB0aGUgYXBwcm9wcmlhdGVuZXNzIG9mIHVzaW5nIG9yIHJlZGlzdHJpYnV0aW5nIHRoZSBXb3JrIGFuZCBhc3N1bWUgYW55IHJpc2tzIGFzc29jaWF0ZWQgd2l0aCBZb3VyIGV4ZXJjaXNlIG9mIHBlcm1pc3Npb25zIHVuZGVyIHRoaXMgTGljZW5zZS4KCjguIExpbWl0YXRpb24gb2YgTGlhYmlsaXR5LiBJbiBubyBldmVudCBhbmQgdW5kZXIgbm8gbGVnYWwgdGhlb3J5LCB3aGV0aGVyIGluIHRvcnQgKGluY2x1ZGluZyBuZWdsaWdlbmNlKSwgY29udHJhY3QsIG9yIG90aGVyd2lzZSwgdW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IChzdWNoIGFzIGRlbGliZXJhdGUgYW5kIGdyb3NzbHkgbmVnbGlnZW50IGFjdHMpIG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzaGFsbCBhbnkgQ29udHJpYnV0b3IgYmUgbGlhYmxlIHRvIFlvdSBmb3IgZGFtYWdlcywgaW5jbHVkaW5nIGFueSBkaXJlY3QsIGluZGlyZWN0LCBzcGVjaWFsLCBpbmNpZGVudGFsLCBvciBjb25zZXF1ZW50aWFsIGRhbWFnZXMgb2YgYW55IGNoYXJhY3RlciBhcmlzaW5nIGFzIGEgcmVzdWx0IG9mIHRoaXMgTGljZW5zZSBvciBvdXQgb2YgdGhlIHVzZSBvciBpbmFiaWxpdHkgdG8gdXNlIHRoZSBXb3JrIChpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIGRhbWFnZXMgZm9yIGxvc3Mgb2YgZ29vZHdpbGwsIHdvcmsgc3RvcHBhZ2UsIGNvbXB1dGVyIGZhaWx1cmUgb3IgbWFsZnVuY3Rpb24sIG9yIGFueSBhbmQgYWxsIG90aGVyIGNvbW1lcmNpYWwgZGFtYWdlcyBvciBsb3NzZXMpLCBldmVuIGlmIHN1Y2ggQ29udHJpYnV0b3IgaGFzIGJlZW4gYWR2aXNlZCBvZiB0aGUgcG9zc2liaWxpdHkgb2Ygc3VjaCBkYW1hZ2VzLgoKOS4gQWNjZXB0aW5nIFdhcnJhbnR5IG9yIEFkZGl0aW9uYWwgTGlhYmlsaXR5LiBXaGlsZSByZWRpc3RyaWJ1dGluZyB0aGUgV29yayBvciBEZXJpdmF0aXZlIFdvcmtzIHRoZXJlb2YsIFlvdSBtYXkgY2hvb3NlIHRvIG9mZmVyLCBhbmQgY2hhcmdlIGEgZmVlIGZvciwgYWNjZXB0YW5jZSBvZiBzdXBwb3J0LCB3YXJyYW50eSwgaW5kZW1uaXR5LCBvciBvdGhlciBsaWFiaWxpdHkgb2JsaWdhdGlvbnMgYW5kL29yIHJpZ2h0cyBjb25zaXN0ZW50IHdpdGggdGhpcyBMaWNlbnNlLiBIb3dldmVyLCBpbiBhY2NlcHRpbmcgc3VjaCBvYmxpZ2F0aW9ucywgWW91IG1heSBhY3Qgb25seSBvbiBZb3VyIG93biBiZWhhbGYgYW5kIG9uIFlvdXIgc29sZSByZXNwb25zaWJpbGl0eSwgbm90IG9uIGJlaGFsZiBvZiBhbnkgb3RoZXIgQ29udHJpYnV0b3IsIGFuZCBvbmx5IGlmIFlvdSBhZ3JlZSB0byBpbmRlbW5pZnksIGRlZmVuZCwgYW5kIGhvbGQgZWFjaCBDb250cmlidXRvciBoYXJtbGVzcyBmb3IgYW55IGxpYWJpbGl0eSBpbmN1cnJlZCBieSwgb3IgY2xhaW1zIGFzc2VydGVkIGFnYWluc3QsIHN1Y2ggQ29udHJpYnV0b3IgYnkgcmVhc29uIG9mIHlvdXIgYWNjZXB0aW5nIGFueSBzdWNoIHdhcnJhbnR5IG9yIGFkZGl0aW9uYWwgbGlhYmlsaXR5LgoKRU5EIE9GIFRFUk1TIEFORCBDT05ESVRJT05TCgpBUFBFTkRJWDogSG93IHRvIGFwcGx5IHRoZSBBcGFjaGUgTGljZW5zZSB0byB5b3VyIHdvcmsuCgpUbyBhcHBseSB0aGUgQXBhY2hlIExpY2Vuc2UgdG8geW91ciB3b3JrLCBhdHRhY2ggdGhlIGZvbGxvd2luZyBib2lsZXJwbGF0ZSBub3RpY2UsIHdpdGggdGhlIGZpZWxkcyBlbmNsb3NlZCBieSBicmFja2V0cyAiW10iIHJlcGxhY2VkIHdpdGggeW91ciBvd24gaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24uIChEb24ndCBpbmNsdWRlIHRoZSBicmFja2V0cyEpICBUaGUgdGV4dCBzaG91bGQgYmUgZW5jbG9zZWQgaW4gdGhlIGFwcHJvcHJpYXRlIGNvbW1lbnQgc3ludGF4IGZvciB0aGUgZmlsZSBmb3JtYXQuIFdlIGFsc28gcmVjb21tZW5kIHRoYXQgYSBmaWxlIG9yIGNsYXNzIG5hbWUgYW5kIGRlc2NyaXB0aW9uIG9mIHB1cnBvc2UgYmUgaW5jbHVkZWQgb24gdGhlIHNhbWUgInByaW50ZWQgcGFnZSIgYXMgdGhlIGNvcHlyaWdodCBub3RpY2UgZm9yIGVhc2llciBpZGVudGlmaWNhdGlvbiB3aXRoaW4gdGhpcmQtcGFydHkgYXJjaGl2ZXMuCgpDb3B5cmlnaHQgW3l5eXldIFtuYW1lIG9mIGNvcHlyaWdodCBvd25lcl0KCkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwp5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAoKaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCgpVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsCldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLgpTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLgo=","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/truth-java8-extension/com.google.truth.extensions@1.1.2","externalReferences":[{"url":"http://github.com/google/truth/truth-extensions-parent/truth-java8-extension","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.truth.extensions/truth-java8-extension/1.1.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-01-23T17:57:20+00:00"}]},{"bom-ref":"pkg:maven/truth/com.google.truth@1.1.2","type":"library","author":"Christian Gruber, Kurt Alfred Kluever, David Saff, David B","group":"truth","name":"com.google.truth","version":"1.1.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/truth/com.google.truth@1.1.2","externalReferences":[{"url":"http://github.com/google/truth/truth","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.google.truth/truth/1.1.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-testlib/pom.xml"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-01-23T17:57:08+00:00"}]},{"bom-ref":"pkg:maven/jersey-client/com.sun.jersey@1.11","type":"library","author":"Oracle Corporation","group":"jersey-client","name":"com.sun.jersey","version":"1.11","scope":"required","licenses":[{"license":{"id":"Classpath exception 2.0","text":{"content":"TGlua2luZyB0aGlzIGxpYnJhcnkgc3RhdGljYWxseSBvciBkeW5hbWljYWxseSB3aXRoIG90aGVyIG1vZHVsZXMgaXMgbWFraW5nIGEgY29tYmluZWQgd29yayBiYXNlZCBvbiB0aGlzIGxpYnJhcnkuIFRodXMsIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgY292ZXIgdGhlIHdob2xlIGNvbWJpbmF0aW9uLgoKQXMgYSBzcGVjaWFsIGV4Y2VwdGlvbiwgdGhlIGNvcHlyaWdodCBob2xkZXJzIG9mIHRoaXMgbGlicmFyeSBnaXZlIHlvdSBwZXJtaXNzaW9uIHRvIGxpbmsgdGhpcyBsaWJyYXJ5IHdpdGggaW5kZXBlbmRlbnQgbW9kdWxlcyB0byBwcm9kdWNlIGFuIGV4ZWN1dGFibGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIGxpY2Vuc2UgdGVybXMgb2YgdGhlc2UgaW5kZXBlbmRlbnQgbW9kdWxlcywgYW5kIHRvIGNvcHkgYW5kIGRpc3RyaWJ1dGUgdGhlIHJlc3VsdGluZyBleGVjdXRhYmxlIHVuZGVyIHRlcm1zIG9mIHlvdXIgY2hvaWNlLCBwcm92aWRlZCB0aGF0IHlvdSBhbHNvIG1lZXQsIGZvciBlYWNoIGxpbmtlZCBpbmRlcGVuZGVudCBtb2R1bGUsIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgbGljZW5zZSBvZiB0aGF0IG1vZHVsZS4gQW4gaW5kZXBlbmRlbnQgbW9kdWxlIGlzIGEgbW9kdWxlIHdoaWNoIGlzIG5vdCBkZXJpdmVkIGZyb20gb3IgYmFzZWQgb24gdGhpcyBsaWJyYXJ5LiBJZiB5b3UgbW9kaWZ5IHRoaXMgbGlicmFyeSwgeW91IG1heSBleHRlbmQgdGhpcyBleGNlcHRpb24gdG8geW91ciB2ZXJzaW9uIG9mIHRoZSBsaWJyYXJ5LCBidXQgeW91IGFyZSBub3Qgb2JsaWdhdGVkIHRvIGRvIHNvLiBJZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gc28sIGRlbGV0ZSB0aGlzIGV4Y2VwdGlvbiBzdGF0ZW1lbnQgZnJvbSB5b3VyIHZlcnNpb24uCg==","contentType":"text/plain","encoding":"base64"},"url":"http://www.gnu.org/software/classpath/license.html"}},{"license":{"id":"GPL-2.0-only","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html"}},{"license":{"id":"CDDL-1.1","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"http://glassfish.java.net/public/CDDL+GPL_1_1.html"}}],"purl":"pkg:maven/jersey-client/com.sun.jersey@1.11","externalReferences":[{"url":"https://jersey.java.net/jersey-client/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/com.sun.jersey/jersey-client/1.11","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2011-12-09T10:29:23+00:00"}]},{"bom-ref":"pkg:maven/jersey-core/com.sun.jersey@1.11","type":"library","group":"jersey-core","name":"com.sun.jersey","version":"1.11","scope":"required","licenses":[{"license":{"id":"GPL-2.0-only","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.gnu.org/licenses/old-licenses/gpl-2.0-standalone.html"}},{"license":{"id":"Classpath exception 2.0","text":{"content":"TGlua2luZyB0aGlzIGxpYnJhcnkgc3RhdGljYWxseSBvciBkeW5hbWljYWxseSB3aXRoIG90aGVyIG1vZHVsZXMgaXMgbWFraW5nIGEgY29tYmluZWQgd29yayBiYXNlZCBvbiB0aGlzIGxpYnJhcnkuIFRodXMsIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgY292ZXIgdGhlIHdob2xlIGNvbWJpbmF0aW9uLgoKQXMgYSBzcGVjaWFsIGV4Y2VwdGlvbiwgdGhlIGNvcHlyaWdodCBob2xkZXJzIG9mIHRoaXMgbGlicmFyeSBnaXZlIHlvdSBwZXJtaXNzaW9uIHRvIGxpbmsgdGhpcyBsaWJyYXJ5IHdpdGggaW5kZXBlbmRlbnQgbW9kdWxlcyB0byBwcm9kdWNlIGFuIGV4ZWN1dGFibGUsIHJlZ2FyZGxlc3Mgb2YgdGhlIGxpY2Vuc2UgdGVybXMgb2YgdGhlc2UgaW5kZXBlbmRlbnQgbW9kdWxlcywgYW5kIHRvIGNvcHkgYW5kIGRpc3RyaWJ1dGUgdGhlIHJlc3VsdGluZyBleGVjdXRhYmxlIHVuZGVyIHRlcm1zIG9mIHlvdXIgY2hvaWNlLCBwcm92aWRlZCB0aGF0IHlvdSBhbHNvIG1lZXQsIGZvciBlYWNoIGxpbmtlZCBpbmRlcGVuZGVudCBtb2R1bGUsIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgbGljZW5zZSBvZiB0aGF0IG1vZHVsZS4gQW4gaW5kZXBlbmRlbnQgbW9kdWxlIGlzIGEgbW9kdWxlIHdoaWNoIGlzIG5vdCBkZXJpdmVkIGZyb20gb3IgYmFzZWQgb24gdGhpcyBsaWJyYXJ5LiBJZiB5b3UgbW9kaWZ5IHRoaXMgbGlicmFyeSwgeW91IG1heSBleHRlbmQgdGhpcyBleGNlcHRpb24gdG8geW91ciB2ZXJzaW9uIG9mIHRoZSBsaWJyYXJ5LCBidXQgeW91IGFyZSBub3Qgb2JsaWdhdGVkIHRvIGRvIHNvLiBJZiB5b3UgZG8gbm90IHdpc2ggdG8gZG8gc28sIGRlbGV0ZSB0aGlzIGV4Y2VwdGlvbiBzdGF0ZW1lbnQgZnJvbSB5b3VyIHZlcnNpb24uCg==","contentType":"text/plain","encoding":"base64"},"url":"http://www.gnu.org/software/classpath/license.html"}},{"license":{"id":"CDDL-1.1","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"http://glassfish.java.net/public/CDDL+GPL_1_1.html"}},{"license":{"id":"GPL-1.0-or-later","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.gnu.org/licenses/old-licenses/gpl-1.0-standalone.html"}},{"license":{"id":"CDDL-1.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/cddl1"}}],"purl":"pkg:maven/jersey-core/com.sun.jersey@1.11","externalReferences":[{"url":"https://mvnrepository.com/artifact/com.sun.jersey/jersey-core/1.11","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2011-12-09T10:27:18+00:00"}]},{"bom-ref":"pkg:maven/javax.inject/javax.inject@1","type":"library","group":"javax.inject","name":"javax.inject","version":"1","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/javax.inject/javax.inject@1","externalReferences":[{"url":"http://code.google.com/p/atinject/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/javax.inject/javax.inject/1","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2009-10-13T23:35:00+00:00"}]},{"bom-ref":"pkg:maven/joda-time/joda-time@2.1","type":"library","author":"Joda.org, Stephen Colebourne, Brian S O'Neill","group":"joda-time","name":"joda-time","version":"2.1","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/joda-time/joda-time@2.1","externalReferences":[{"url":"http://joda-time.sourceforge.net","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/joda-time/joda-time/2.1","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2012-02-22T16:22:37+00:00"}]},{"bom-ref":"pkg:maven/junit/junit@4.13.2","type":"library","author":"JUnit, David Saff, Kevin Cooney, Stefan Birkner, Marc Philipp","group":"junit","name":"junit","version":"4.13.2","scope":"required","licenses":[{"license":{"id":"EPL-1.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"http://www.eclipse.org/legal/epl-v10.html"}}],"purl":"pkg:maven/junit/junit@4.13.2","externalReferences":[{"url":"http://junit.org","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/junit/junit/4.13.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-testlib/pom.xml"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-02-13T16:31:52+00:00"}]},{"bom-ref":"pkg:maven/byte-buddy/net.bytebuddy@1.10.20","type":"library","author":"Rafael Winterhalter","group":"byte-buddy","name":"net.bytebuddy","version":"1.10.20","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/byte-buddy/net.bytebuddy@1.10.20","externalReferences":[{"url":"https://bytebuddy.net/byte-buddy","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy/1.10.20","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2021-12-15T17:53:41+00:00"}]},{"bom-ref":"pkg:maven/byte-buddy-agent/net.bytebuddy@1.10.20","type":"library","author":"Rafael Winterhalter","group":"byte-buddy-agent","name":"net.bytebuddy","version":"1.10.20","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/byte-buddy-agent/net.bytebuddy@1.10.20","externalReferences":[{"url":"https://bytebuddy.net/byte-buddy-agent","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy-agent/1.10.20","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2021-12-15T17:48:42+00:00"}]},{"bom-ref":"pkg:maven/commons-math/org.apache.commons@2.2","type":"library","author":"The Apache Software Foundation, Mikkel Meyer Andersen, Bill Barker, Albert Davidson Chou, Mark Diggory, Robert Burrell Donkin, Tim O'Brien, Luc Maisonobe, J. Pietschmann, Dimitri Pourbaix, Phil Steitz, Brent Worden, Gilles Sadowski","group":"commons-math","name":"org.apache.commons","version":"2.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/commons-math/org.apache.commons@2.2","externalReferences":[{"url":"http://commons.apache.org/math/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.apache.commons/commons-math/2.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2011-02-26T18:24:32+00:00"}]},{"bom-ref":"pkg:maven/checker-qual/org.checkerframework@3.12.0","type":"library","author":"Michael Ernst, Suzanne Millstein","group":"checker-qual","name":"org.checkerframework","version":"3.12.0","scope":"required","licenses":[{"license":{"id":"MIT","text":{"content":"TUlUIExpY2Vuc2UKCkNvcHlyaWdodCAoYykgPHllYXI+IDxjb3B5cmlnaHQgaG9sZGVycz4KClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/MIT"}}],"purl":"pkg:maven/checker-qual/org.checkerframework@3.12.0","externalReferences":[{"url":"https://checkerframework.org","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.checkerframework/checker-qual/3.12.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"compile"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-gwt/pom.xml"},{"name":"location","value":"guava-testlib/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"guava/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-04-01T18:48:06+00:00"}]},{"bom-ref":"pkg:maven/easymock/org.easymock@4.3","type":"library","author":"<a href=\"http://easymock.org/contributors.html\" target=\"_blank\">EasyMock contributors</a>, Tammo Freese, Henri Tremblay","group":"easymock","name":"org.easymock","version":"4.3","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/easymock/org.easymock@4.3","externalReferences":[{"url":"http://easymock.org/easymock","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.easymock/easymock/4.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-04-18T00:54:35+00:00"}]},{"bom-ref":"pkg:maven/hamcrest-core/org.hamcrest@1.3","type":"library","author":"Joe Walnes, Nat Pryce, Steve Freeman, Neil Dunn, Tom Denley","group":"hamcrest-core","name":"org.hamcrest","version":"1.3","scope":"required","licenses":[{"license":{"id":"BSD-2-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPiAKClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-2-Clause"}}],"purl":"pkg:maven/hamcrest-core/org.hamcrest@1.3","externalReferences":[{"url":"https://github.com/hamcrest/JavaHamcrest/hamcrest-core","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core/1.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2012-07-09T21:08:02+00:00"}]},{"bom-ref":"pkg:maven/mockito-core/org.mockito@3.9.0","type":"library","author":"Szczepan Faber, Brice Dutheil, Rafael Winterhalter, Tim van der Lippe","group":"mockito-core","name":"org.mockito","version":"3.9.0","scope":"required","licenses":[{"license":{"id":"MIT","text":{"content":"TUlUIExpY2Vuc2UKCkNvcHlyaWdodCAoYykgPHllYXI+IDxjb3B5cmlnaHQgaG9sZGVycz4KClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/MIT"}}],"purl":"pkg:maven/mockito-core/org.mockito@3.9.0","externalReferences":[{"url":"https://github.com/mockito/mockito","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.mockito/mockito-core/3.9.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"direct"},{"name":"env","value":"test"},{"name":"match_type","value":"by_manifest"},{"name":"location","value":"android/guava-tests/pom.xml"},{"name":"location","value":"android/pom.xml"},{"name":"location","value":"guava-tests/pom.xml"},{"name":"location","value":"pom.xml"},{"name":"published_at","value":"2021-04-07T13:54:37+00:00"}]},{"bom-ref":"pkg:maven/objenesis/org.objenesis@3.2","type":"library","author":"Joe Walnes, Henri Tremblay, Leonardo Mesquita, Joe Walnes, Henri Tremblay, Leonardo Mesquita","group":"objenesis","name":"org.objenesis","version":"3.2","scope":"required","licenses":[{"license":{"id":"Apache-2.0","text":{"content":"","contentType":"text/plain","encoding":"base64"},"url":"https://www.apache.org/licenses/LICENSE-2.0"}}],"purl":"pkg:maven/objenesis/org.objenesis@3.2","externalReferences":[{"url":"http://objenesis.org/objenesis","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.objenesis/objenesis/3.2","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2021-03-22T03:19:59+00:00"}]},{"bom-ref":"pkg:maven/asm/org.ow2.asm@9.0","type":"library","author":"OW2, Eric Bruneton, Eugene Kuleshov, Remi Forax","group":"asm","name":"org.ow2.asm","version":"9.0","scope":"required","licenses":[{"license":{"id":"BSD-3-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPi4gCgpSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBhbmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQgbW9kaWZpY2F0aW9uLCBhcmUgcGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6CgoxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuCgoyLiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UsIHRoaXMgbGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uCgozLiBOZWl0aGVyIHRoZSBuYW1lIG9mIHRoZSBjb3B5cmlnaHQgaG9sZGVyIG5vciB0aGUgbmFtZXMgb2YgaXRzIGNvbnRyaWJ1dG9ycyBtYXkgYmUgdXNlZCB0byBlbmRvcnNlIG9yIHByb21vdGUgcHJvZHVjdHMgZGVyaXZlZCBmcm9tIHRoaXMgc29mdHdhcmUgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uCgpUSElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIFRIRSBDT1BZUklHSFQgSE9MREVSUyBBTkQgQ09OVFJJQlVUT1JTICJBUyBJUyIgQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRUQgV0FSUkFOVElFUywgSU5DTFVESU5HLCBCVVQgTk9UIExJTUlURUQgVE8sIFRIRSBJTVBMSUVEIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBUkUgRElTQ0xBSU1FRC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIENPUFlSSUdIVCBIT0xERVIgT1IgQ09OVFJJQlVUT1JTIEJFIExJQUJMRSBGT1IgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIChJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBUT1JUIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRiBUSElTIFNPRlRXQVJFLCBFVkVOIElGIEFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLgo=","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-3-Clause"}}],"purl":"pkg:maven/asm/org.ow2.asm@9.0","externalReferences":[{"url":"http://asm.ow2.io/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.ow2.asm/asm/9.0","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2020-09-21T18:08:22+00:00"}]},{"bom-ref":"pkg:maven/asm-analysis/org.ow2.asm@5.0.3","type":"library","author":"ObjectWeb, Eric Bruneton, Eugene Kuleshov, Remi Forax","group":"asm-analysis","name":"org.ow2.asm","version":"5.0.3","scope":"required","licenses":[{"license":{"id":"BSD-2-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPiAKClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-2-Clause"}}],"purl":"pkg:maven/asm-analysis/org.ow2.asm@5.0.3","externalReferences":[{"url":"http://asm.objectweb.org/asm-analysis/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.ow2.asm/asm-analysis/5.0.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2014-05-24T08:30:22+00:00"}]},{"bom-ref":"pkg:maven/asm-commons/org.ow2.asm@5.0.3","type":"library","author":"ObjectWeb, Eric Bruneton, Eugene Kuleshov, Remi Forax","group":"asm-commons","name":"org.ow2.asm","version":"5.0.3","scope":"required","licenses":[{"license":{"id":"BSD-2-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPiAKClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-2-Clause"}}],"purl":"pkg:maven/asm-commons/org.ow2.asm@5.0.3","externalReferences":[{"url":"http://asm.objectweb.org/asm-commons/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.ow2.asm/asm-commons/5.0.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2014-05-24T08:30:32+00:00"}]},{"bom-ref":"pkg:maven/asm-tree/org.ow2.asm@5.0.3","type":"library","author":"ObjectWeb, Eric Bruneton, Eugene Kuleshov, Remi Forax","group":"asm-tree","name":"org.ow2.asm","version":"5.0.3","scope":"required","licenses":[{"license":{"id":"BSD-2-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPiAKClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-2-Clause"}}],"purl":"pkg:maven/asm-tree/org.ow2.asm@5.0.3","externalReferences":[{"url":"http://asm.objectweb.org/asm-tree/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.ow2.asm/asm-tree/5.0.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2014-05-24T08:30:43+00:00"}]},{"bom-ref":"pkg:maven/asm-util/org.ow2.asm@5.0.3","type":"library","author":"ObjectWeb, Eric Bruneton, Eugene Kuleshov, Remi Forax","group":"asm-util","name":"org.ow2.asm","version":"5.0.3","scope":"required","licenses":[{"license":{"id":"BSD-2-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPiAKClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-2-Clause"}}],"purl":"pkg:maven/asm-util/org.ow2.asm@5.0.3","externalReferences":[{"url":"http://asm.objectweb.org/asm-util/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.ow2.asm/asm-util/5.0.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2014-05-24T08:30:53+00:00"}]},{"bom-ref":"pkg:maven/asm-xml/org.ow2.asm@5.0.3","type":"library","author":"ObjectWeb, Eric Bruneton, Eugene Kuleshov, Remi Forax","group":"asm-xml","name":"org.ow2.asm","version":"5.0.3","scope":"required","licenses":[{"license":{"id":"BSD-2-Clause","text":{"content":"Q29weXJpZ2h0IChjKSA8eWVhcj4gPG93bmVyPiAKClJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgYXJlIG1ldDoKCjEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lci4KCjIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGUgZG9jdW1lbnRhdGlvbiBhbmQvb3Igb3RoZXIgbWF0ZXJpYWxzIHByb3ZpZGVkIHdpdGggdGhlIGRpc3RyaWJ1dGlvbi4KClRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPUFlSSUdIVCBIT0xERVJTIEFORCBDT05UUklCVVRPUlMgIkFTIElTIiBBTkQgQU5ZIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRUQgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQ09QWVJJR0hUIEhPTERFUiBPUiBDT05UUklCVVRPUlMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVDVCwgSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTIE9GIFVTRSwgREFUQSwgT1IgUFJPRklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQgT04gQU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSCBEQU1BR0UuCg==","contentType":"text/plain","encoding":"base64"},"url":"https://opensource.org/licenses/BSD-2-Clause"}}],"purl":"pkg:maven/asm-xml/org.ow2.asm@5.0.3","externalReferences":[{"url":"http://asm.objectweb.org/asm-xml/","comment":"Homepage","type":"website"},{"url":"https://mvnrepository.com/artifact/org.ow2.asm/asm-xml/5.0.3","comment":"Index URL","type":"website"}],"properties":[{"name":"language","value":"Java"},{"name":"relation","value":"indirect"},{"name":"env","value":"test"},{"name":"match_type","value":"by_resolve"},{"name":"published_at","value":"2014-05-24T08:31:03+00:00"}]}],"vulnerabilities":[{"bom-ref":"8f982f93-26a2-43d2-af8a-3111dd194e70","id":"CVE-2022-25647","references":[{"id":"CVE-2022-25647","source":{"name":"NVD","url":"https://nvd.nist.gov/vuln/detail/CVE-2022-25647"}},{"id":"GHSA-4jrv-ppp4-jm57","source":{"name":"GitHub Advisories","url":"https://github.com/advisories/GHSA-4jrv-ppp4-jm57"}}],"ratings":[{"score":7.5,"severity":"high","method":"CVSSv3","vector":"AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"},{"score":5,"severity":"medium","method":"CVSSv2","vector":"AV:N/AC:L/Au:N/C:N/I:N/A:P"}],"cwes":[502],"description":"The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.","detail":"The package `com.google.code.gson:gson` before 2.8.9 is vulnerable to Deserialization of Untrusted Data via the `writeReplace()` method in internal classes, which may lead to denial of service attacks.","published":"2022-05-01T16:15:00+00:00","updated":"2022-07-22T13:38:00+00:00","affects":[{"ref":"pkg:maven/gson/com.google.code.gson@2.2.2"}]},{"bom-ref":"ac42fb26-1c56-4602-8250-35a4630df28c","id":"CVE-2018-10237","references":[{"id":"GHSA-mvr2-9pj6-7w5j","source":{"name":"GitHub Advisories","url":"https://github.com/advisories/GHSA-mvr2-9pj6-7w5j"}},{"id":"CVE-2018-10237","source":{"name":"NVD","url":"https://nvd.nist.gov/vuln/detail/CVE-2018-10237"}}],"ratings":[{"score":5.9,"severity":"medium","method":"CVSSv3","vector":"AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H"},{"score":4.3,"severity":"medium","method":"CVSSv2","vector":"AV:N/AC:M/Au:N/C:N/I:N/A:P"}],"cwes":[502,770],"description":"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.","detail":"Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.","published":"2018-04-26T21:29:00+00:00","updated":"2022-06-29T19:15:00+00:00","affects":[{"ref":"pkg:maven/guava/com.google.guava@18.0"}]},{"bom-ref":"2fbb4103-1d5d-4c5a-840f-03fe3c719ada","id":"CVE-2020-8908","references":[{"id":"GHSA-5mg8-w23w-74h3","source":{"name":"GitHub Advisories","url":"https://github.com/advisories/GHSA-5mg8-w23w-74h3"}},{"id":"CVE-2020-8908","source":{"name":"NVD","url":"https://nvd.nist.gov/vuln/detail/CVE-2020-8908"}}],"ratings":[{"score":3.3,"severity":"low","method":"CVSSv3","vector":"AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N"},{"score":2.1,"severity":"low","method":"CVSSv2","vector":"AV:L/AC:L/Au:N/C:P/I:N/A:N"}],"cwes":[173,200,732],"description":"A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.","detail":"A temp directory creation vulnerability exists in all Guava versions allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava `com.google.common.io.Files.createTempDir()`. The permissions granted to the directory created default to the standard unix-like /tmp ones, leaving the files open. We recommend explicitly changing the permissions after the creation of the directory, or removing uses of the vulnerable method\n","published":"2020-12-10T23:15:00+00:00","updated":"2022-05-10T15:21:00+00:00","affects":[{"ref":"pkg:maven/guava/com.google.guava@18.0"}]}]}
